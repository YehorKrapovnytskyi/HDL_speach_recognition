// -------------------------------------------------------------
// 
// File Name: ..\..\hw\CIC_decimator_HDL_model\CIC_decimator.v
// Created: 2022-05-20 22:52:52
// 
// Generated by MATLAB 9.5 and HDL Coder 3.13
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: CIC_decimator
// Source Path: CIC_decimator_HDL_model/CIC_decimator_HDL_model/CIC_decimator
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module CIC_decimator
          (i_clk,
           i_rst_n,
           enb,
           i_data,
           i_clk_slow_en,
           o_data);


  input   i_clk;
  input   i_rst_n;
  input   enb;
  input   signed [1:0] i_data;  // sfix2
  input   i_clk_slow_en;
  output  signed [14:0] o_data;  // sfix15


  reg signed [1:0] Unit_Delay2_out1;  // sfix2
  reg signed [14:0] Unit_Delay_out1;  // sfix15
  wire signed [14:0] IntSum2_1;  // sfix15
  wire signed [14:0] IntSum2_out1;  // sfix15
  reg signed [14:0] Unit_Delay1_out1;  // sfix15
  wire signed [14:0] IntSum3_out1;  // sfix15
  reg signed [14:0] Unit_Delay_Enabled_Synchronous_out1;  // sfix15
  wire signed [14:0] CombSum5_out1;  // sfix15
  reg signed [14:0] Unit_Delay_Enabled_Synchronous1_out1;  // sfix15
  wire signed [14:0] CombSum6_out1;  // sfix15
  reg signed [14:0] Unit_Delay_Enabled_Synchronous2_out1;  // sfix15


  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay2_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay2_out1 <= 2'sb00;
      end
      else begin
        if (enb) begin
          Unit_Delay2_out1 <= i_data;
        end
      end
    end



  assign IntSum2_1 = {{13{Unit_Delay2_out1[1]}}, Unit_Delay2_out1};
  assign IntSum2_out1 = IntSum2_1 + Unit_Delay_out1;



  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay_out1 <= 15'sb000000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay_out1 <= IntSum2_out1;
        end
      end
    end



  assign IntSum3_out1 = Unit_Delay_out1 + Unit_Delay1_out1;



  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay1_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay1_out1 <= 15'sb000000000000000;
      end
      else begin
        if (enb) begin
          Unit_Delay1_out1 <= IntSum3_out1;
        end
      end
    end



  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay_Enabled_Synchronous_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay_Enabled_Synchronous_out1 <= 15'sb000000000000000;
      end
      else begin
        if (enb && i_clk_slow_en) begin
          Unit_Delay_Enabled_Synchronous_out1 <= Unit_Delay1_out1;
        end
      end
    end



  assign CombSum5_out1 = Unit_Delay1_out1 - Unit_Delay_Enabled_Synchronous_out1;



  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay_Enabled_Synchronous1_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay_Enabled_Synchronous1_out1 <= 15'sb000000000000000;
      end
      else begin
        if (enb && i_clk_slow_en) begin
          Unit_Delay_Enabled_Synchronous1_out1 <= CombSum5_out1;
        end
      end
    end



  assign CombSum6_out1 = CombSum5_out1 - Unit_Delay_Enabled_Synchronous1_out1;



  always @(posedge i_clk or negedge i_rst_n)
    begin : Unit_Delay_Enabled_Synchronous2_process
      if (i_rst_n == 1'b0) begin
        Unit_Delay_Enabled_Synchronous2_out1 <= 15'sb000000000000000;
      end
      else begin
        if (enb && i_clk_slow_en) begin
          Unit_Delay_Enabled_Synchronous2_out1 <= CombSum6_out1;
        end
      end
    end



  assign o_data = Unit_Delay_Enabled_Synchronous2_out1;

endmodule  // CIC_decimator

